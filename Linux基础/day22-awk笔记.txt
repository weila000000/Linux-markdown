学会awk只需要解决两件事
怎么切，怎么输出

0.命令格式
	awk   [options]    '[pattern   {action}]' 
	       参数选项       匹配模式     执行动作
	       
	awk    带什么家伙      '找谁   {干啥}'  file

1.输出列：
	#0.位置变量说明
	,		输出分隔符，默认逗号表示空格
	$0		输出所有  
	$1  	输出第一列 
	$N  	输出第N列
	$NF 	输出最后一列
	$(NF-1)	输出倒数第2列	

	#1.输出所有列
	echo 123 456 789|awk '{print $0}'
	
	#2.只输出第一列
	echo 123 456 789|awk '{print $1}'
	
	#3.输出第1和第2列
	echo 123 456 789|awk '{print $1,$2}'
	
	#4.输出第1列到第3列
	echo 123 456 789|awk '{print $1,$2,$3}'
	
	#5.改变输出顺序为第3列，第2列，第1列
	echo 123 456 789|awk '{print $3,$2,$1}'
	
	#6.在第1列前添加A，第2列前添加B，第3列前添加C
	echo 123 456 789|awk '{print "A"$1,"B"$2,"C"$3}'
	
	#7.输出1-3列，以:分隔
	echo 123 456 789|awk '{print $1":"$2":"$3}'
	
	#8.输出最后一列
	echo 123 456 789|awk '{print $NF}'


2.-F 或 FS改变默认分隔符：
	#0.语法格式: 
	awk -F ":"
	awk -F ":/"
	awk -F "[:/]"
	
	#1.FS改变默认分隔符
	echo 1:2:3|awk -v FS=':' '{print $1,$2,$3}'
	echo 1-2-3|awk -v FS='-' '{print $1,$2,$3}'
	
	#2.输出第1列和最后一列
	awk -F':' '{print $1，$NF}' /etc/passwd
	
	#3.输出倒数第二列：
	awk -F':' '{print $(NF-1)}' /etc/passwd
	
    #4.多个符号
	echo ':://...---oldbug:..oldboy'
	echo ':://...---oldbug:..oldboy'|awk -F '[:/.-]+' '{print $2}'
	echo ':://...---oldbug:..oldboy'|awk -F '[:/.-]+' '{print $3}'

	#5.取出passwd中的第6列但是不要/
	awk -F ":/" '{print $2 }' passwd.txt
	awk -F "[:/]" '{print $9}' passwd.txt 
	awk -F "[:/]+" '{print $6}' passwd.txt
	
	#6.特殊情况-以单引号为分隔符
	echo 1\'2\'3\'4|awk -F\' '{print $1,$2}'
	echo 1\'2\'3\'4|awk -F"[']" '{print $1,$2}'

	#7.特殊情况-以[为分隔符
	echo 1\|2-3[4|awk -F'\\[' '{print $1}'
	echo 1\|2-3[4|awk -F'\\[' '{print $2}'

	#8.特殊情况-以|为分隔符
	echo 1\|2-3[4|awk -F'\\|' '{print $1}' 

	#9.特殊情况，以||为分隔符
	echo 1\|\|2-3[4|awk -F'\\|\\|' '{print $1}'
	echo 1\|\|2-3[4|awk -F'\\|\\|' '{print $2}'

3.OFS 默认输出分隔符 
	需要画图
	echo 1-2-3|awk -v FS='-' -v OFS=':' '{print $1,$2,$3}'
	echo 1:2:3|awk -v FS=':' -v OFS='-' '{print $1,$2,$3}'

4.比较匹配：
	#0.比较符号说明
	针对数字：
    ==
	>
	<
	!=
	>=
	<=
	针对字符串：
	~	
	~!	

	#1.输出第3列等于0的行
	awk -F':' '$3==0{print $0}' /etc/passwd
	
	#2.输出第3列等于0的行
	awk -F':' '$3>=900{print $1,$3}' /etc/passwd
	
	#3.输出第3列小于900的行
	awk -F':' '$3<=900{print $1,$3}' /etc/passwd
	
	#4.输出第3列大于300的行
	awk -F':' '$3>=300 || $3<=100 {print $1,$3,$4}' /etc/passwd
	
	#5.输出最后一列匹配/sbin/nologin的行
	awk -F':' '$NF ~ "/sbin/nologin" {print $NF,$1}' /etc/passwd
	
	#6.输出最后一列不是/sbin/nologin的行
	awk -F':' '$NF !~ "/sbin/nologin" {print $NF,$1}' /etc/passwd

5.正则匹配：
	#0.格式说明
	awk '/正则表达式/{print $0}'

	#1.输出开头包含nginx的行
	awk '/^nginx/{print $0}' /etc/passwd
	awk '/^sshd/{print $0}' /etc/passwd

6.范围匹配
	#0.格式说明
	NR  	行
	NR==	等于行
	NR>=    大于等于行
	NR<=    小于等于
	NR>=N&&NR<=M  从N行到M行

	#1.输出第2行
	awk 'NR==2{print NR,$0}' /etc/passwd
	
	#2.输出第2行以后的所有行
	awk 'NR>=2{print NR,$0}' /etc/passwd 
	
	#3.输出1到5行所有内容
	awk 'NR>=1&&NR<=5{print NR,$0}' /etc/passwd
	
	#4.输出以root开头到sshd开头的行
	awk '/^root/,/^sshd/' /etc/passwd

7.特殊动作-BEGIN-END 在动作之前做什么操作
  	seq 1 10|awk 'BEGIN{print "开始"}{print $0}END{print "结束"}'
    awk -F: '$3>100{a++}END{print a}' /etc/passwd
 
8.扩展-数组
	统计排名前10的IP地址
	方法1:
	awk '{print $1}' access_log |sort | uniq -c | sort -rn | head  -5
	
	方法2:
  	awk '{IP[$1]++}END{for(key in IP) print IP[key],key }' access_log |sort -rn | haed -5  

7.日志分析需求：
  1.找出访问网站频次最高的 IP 排名前十
  2.找出访问网站排名前十的 URL
  3.找出中午 10 点到 2 点之间 www 网站访问频次最高的 IP
  4.对比昨天这个时间段和今天这个时间段访问频次有什么变化
  5.对比上周这个时间和今天这个时间的区别
  6.找出特定的页面被访问了多少次
  7.找出有问题的 IP 地址，并告诉我这个IP地址都访问了什么页面，在对比前几天他来过吗？他从什么时间段开
  始访问的，什么时间段走了
  8.找出来访问最慢的前十个页面并统计平均响应时间，对比昨天这也页面访问也这么慢吗？
  9.找出搜索引擎今天各抓取了多少次？抓取了哪些页面？响应时间如何？
  10.找出伪造成搜索引擎的 IP 地址
  11.5 分钟之内告诉我结果

8.日志分析脚本参考
#!/bin/bash 

#1.显示服务信息
echo "==============================
服务器名:$(hostname)
服务器IP:$(hostname -I)
查询日志为:xxx.com_access.log
查询时间为: $(date +%F)
=============================="
#2.PV数
echo "PV数量为: $(wc -l bbs.xxxx.com_access.log|awk '{print $1}')"
echo "=============================="
#3.搜索引擎次数
echo "搜索情况汇总"
echo "搜索引擎总计访问次数: $(egrep -i 'bot|spider|Spider' bbs.xxxx.com_access.log |wc -l)"
echo "Baidu访问次数：      $(egrep -i 'Baiduspider' bbs.xxxx.com_access.log |wc -l)"
echo "bing访问次数：       $(egrep -i 'bingbot' bbs.xxxx.com_access.log |wc -l)"
echo "Google访问次数：     $(egrep -i 'googlebot' bbs.xxxx.com_access.log |wc -l)"
echo "sougou访问次数：     $(egrep -i 'Sogou web spider|pic.sogou.com' bbs.xxxx.com_access.log |wc -l)"
echo "yisou访问次数：      $(egrep -i 'YisouSpider' bbs.xxxx.com_access.log |wc -l)"
echo "brandwatch访问次数： $(egrep -i 'brandwatch' bbs.xxxx.com_access.log |wc -l)"
#4.TOP IP
echo "=============================="
echo "访问最多IP前10为:"
num=1
exec < ip.txt
while read line 
do
   num=`echo ${line}|awk '{print $1}'`
   ip=`echo ${line}|awk '{print $2}'`
   host=`curl -s cip.cc/${ip}|awk '/地址/{print $3}'`
   echo "${num} ${ip} ${host}" 
   sleep 2
done

#5.其他
echo "=============================="
echo "监控关键链接为：GET /thread-"
echo "=============================="
echo "关键链接PV访问次数: $(grep "GET /thread-" bbs.xxxx.com_access.log|wc -l)"
echo "=============================="
echo "关键链接平均响应时间为: $(grep "GET /thread-" bbs.xxxx.com_access.log|awk '{sum+=$NF} END {print  sum/NR}')"
echo "=============================="
echo "关键链接访问响应时间排名"
echo "$(awk '{print $NF}' bbs.xxxx.com_access.log |grep -v "-"|cut -b -3|sort|uniq -c|sort -nr|head -10)"
